{% set ceph_count = (roles_count[leaf.name]["CephStorage"] + roles_count[leaf.name]["CephAll"]) %}
{% set hci_count = (roles_count[leaf.name]["ComputeHCI"] + roles_count[leaf.name]["DistributedComputeHCI"] + roles_count[leaf.name]["DistributedComputeHCIScaleOut"]) %}
{% set DefaultLeaf0_ceph_count = (roles_count[DefaultLeaf0.name]["CephStorage"] + roles_count[DefaultLeaf0.name]["CephAll"]) %}
{% set DefaultLeaf0_hci_count = (roles_count[DefaultLeaf0.name]["ComputeHCI"] + roles_count[DefaultLeaf0.name]["DistributedComputeHCI"] + roles_count[DefaultLeaf0.name]["DistributedComputeHCIScaleOut"]) %}

parameter_defaults:
{% if leaf.name == DefaultLeaf0.name %}
{% if DCNLeafs | length > 0 %}
{% if (ceph_count + hci_count) > 0 %}
  GlanceEnabledImportMethods: web-download,copy-image
  GlanceBackend: rbd
  GlanceStoreDescription: '{{ leaf.name }} rbd glance store'
  GlanceBackendID: {{ leaf.name }}
  CephClusterName: {{ leaf.name }}
  GlanceRbdPoolName: images
  CinderStorageAvailabilityZone: {{ leaf.name }}
# Uncomment the following after deploying the leafs
#  GlanceMultistoreConfig:
{% for dcn_leaf in DCNLeafs %}
{% if (roles_count[dcn_leaf.name]["CephStorage"] + roles_count[dcn_leaf.name]["CephAll"] + roles_count[dcn_leaf.name]["ComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCIScaleOut"]) > 0 %}
#    {{ dcn_leaf.name }}:
#      GlanceBackend: rbd
#      GlanceStoreDescription: '{{ dcn_leaf.name }} rbd glance store'
#      CephClusterName: {{ dcn_leaf.name }}
#      CephClientUserName: openstack
#      GlanceBackendID: {{ dcn_leaf.name }}
#      GlanceRbdPoolName: images
{% else %}
#    {{ dcn_leaf.name }}:
#      GlanceBackend: cinder
#      GlanceStoreDescription: '{{ dcn_leaf.name }} Block Storage (cinder) store'
#      GlanceBackendID: {{ dcn_leaf.name }}
{% endif %}
{% endfor %}
{% else %}
  GlanceBackend: cinder
  CinderStorageAvailabilityZone: {{ leaf.name }}
{% endif %}
  NovaComputeAvailabilityZone: {{ leaf.name }}
  NovaCrossAZAttach: false
  ControllerExtraConfig:
    nova::scheduler::filter::scheduler_host_subset_size: '999'
    horizon::keystone_multidomain_support: true
    nova::availability_zone::default_schedule_zone: {{ leaf.name }}
{% else %}
  ControllerExtraConfig:
    nova::scheduler::filter::scheduler_host_subset_size: '999'
    horizon::keystone_multidomain_support: true
{% endif %}
  PublicVirtualFixedIPs: [{'ip_address':'{{ overcloud_ip }}'}]
{% else %}
  CinderStorageAvailabilityZone: {{ leaf.name }}
  GlanceBackendID: {{ leaf.name }}
{% if (ceph_count + hci_count) > 0 %}
  GlanceEnabledImportMethods: web-download,copy-image
  GlanceBackend: rbd
  GlanceStoreDescription: '{{ leaf.name }} rbd glance store'
  GlanceRbdPoolName: images
{% else %}
  GlanceBackend: cinder
{% endif %}
{% if (DefaultLeaf0_ceph_count + DefaultLeaf0_hci_count) > 0 %}
  GlanceMultistoreConfig:
    {{ DefaultLeaf0.name }}:
      GlanceBackend: rbd
      GlanceStoreDescription: '{{ DefaultLeaf0.name }} rbd glance store'
      CephClusterName: {{ DefaultLeaf0.name }}
      GlanceRbdPoolName: images
      CephClientUserName: openstack
{% endif %}
  NovaAZAttach: false
  NovaComputeAvailabilityZone: {{ leaf.name }}
  RootStackName: {{ leaf.name }}
  ManageNetworks: false
{% endif %}
{% if RHOSP_version != 17.0 %}
  AllNodesExtraConfig:
    swap_size_megabytes: '8192'
{% for ocrole in overcloud_roles %}
{% if roles_count[leaf.name][ocrole.name] > 0 %}
  {{ ocrole.name }}SchedulerHints:
    'capabilities:node': '{{ leaf.name }}-{{ ocrole.profile }}%index%'
{% endif %}
{% endfor %}
{% endif %}
{% if RegisterNodes %}
  RhsmVars:
{% if (rh_orgid is not defined) or (rh_activationkey is not defined) %}
    rhsm_username: "{{ rh_username }}"
    rhsm_password: "{{ rh_password }}"
{% else %}
    rhsm_org_id: "{{ rh_orgid }}"
    rhsm_activation_key: "{{ rh_activationkey }}"
{% endif %}
{% if (rh_pool is defined) %}
    rhsm_pool_ids: "{{ rh_pool }}"
{% endif %}
    rhsm_repos:
{% for repo in RHOSP_version_supported[RHOSP_version].nodes_repos %}
      - {{ repo }}
{% endfor %}
{% if RHOSP_version != 13.0 %}
    rhsm_release: {{ RHOSP_version_supported[RHOSP_version].rhel_release }}
{% endif %}
{% endif %}
{% if RHOSP_version == 13.0 %}
  DockerInsecureRegistryAddress:
  - undercloud.ctlplane.localdomain:8787
  - 192.168.24.1:8787
{% endif %}

{% if (roles_count[leaf.name]["ComputeInstanceHA"] > 0) or (ControllersFencing | bool) %}
  # Fencing parameters
  EnableFencing: true
  FencingConfig:
    devices:
{% for vm in vms if ((vm.profile == 'computeinstanceha') or (vm.profile == 'controller')) and (vm.hypervisor == leaf.hypervisor) %}
    # {{ vm.name }}
    - agent: fence_ipmilan
      host_mac: {{ vm.mac }}:{{ (networks | selectattr('name', 'search', 'RHOSPVirtLab_ctlplane') | list | first).mac_suffix }}
      params:
        login: admin
        passwd: admin
        ipaddr: {% if vm.hypervisor == 'localhost' %}192.168.250.1{% else %}{{ hostvars[vm.hypervisor].ansible_host }}{% endif %}

        ipport: {{ vm.bmcport }}
        lanplus: 1
{% endfor %}
{% for node in physical if ((node.profile == 'computeinstanceha') or (node.profile == 'controller')) and (node.leaf == leaf.name) %}
    # {{ node.name }}
    - agent: fence_ipmilan
      host_mac: {{ node.mac }}
      params:
        login: {{ node.pm_user }}
        passwd: {{ node.pm_password }}
        ipaddr: {{ node.pm_addr }}
        ipport: {{ node.pm_port }}
        lanplus: 1
{% endfor %}
{% endif %}