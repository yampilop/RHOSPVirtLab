{% set rhel_image_name = 'rhel' ~ RHOSP_version_supported[RHOSP_version].rhel_release %}
{% set rhel_image_file = RHOSP_version_supported[RHOSP_version].rhel_image.name %}
{% set dpdk_count = (roles_count[DefaultLeaf0.name]["ComputeOvsDpdk"] + roles_count[DefaultLeaf0.name]["ComputeOvsDpdkSriov"]) %}
{% set sriov_count = (roles_count[DefaultLeaf0.name]["ComputeSriov"] + roles_count[DefaultLeaf0.name]["ComputeOvsHwOffload"] + roles_count[DefaultLeaf0.name]["ComputeOvsDpdkSriov"]) %}
{% set ceph_count = (roles_count[DefaultLeaf0.name]["CephStorage"] + roles_count[DefaultLeaf0.name]["CephAll"]) %}
{% set hci_count = (roles_count[DefaultLeaf0.name]["ComputeHCI"] + roles_count[DefaultLeaf0.name]["DistributedComputeHCI"] + roles_count[DefaultLeaf0.name]["DistributedComputeHCIScaleOut"]) %}
#/bin/bash

source /home/stack/overcloudrc

################################################################################
### Overcloud images ###########################################################
################################################################################

{% if (DCNLeafs | length > 0) and ((ceph_count + hci_count) > 0) %}
openstack image show '{{ rhel_image_name }}' &>/dev/null || (qemu-img convert -f qcow2 -O raw images/{{ rhel_image_file }} images/{{ rhel_image_file }}.raw && glance image-create --disk-format raw --container-format bare --name '{{ rhel_image_name }}' --file images/{{ rhel_image_file }}.raw --visibility public --store {{ DefaultLeaf0.name }} && glance image-import $(openstack image show '{{ rhel_image_name }}' -c id -f value) --stores {% for dcn_leaf in DCNLeafs if (roles_count[dcn_leaf.name]["CephStorage"] + roles_count[dcn_leaf.name]["CephAll"] + roles_count[dcn_leaf.name]["ComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCIScaleOut"]) > 0 %}{{ dcn_leaf.name }}{{ "," if not loop.last else "" }}{% endfor %} --import-method copy-image)
openstack image show CirrOS &>/dev/null || (qemu-img convert -f qcow2 -O raw images/cirros.qcow2 images/cirros.raw && glance image-create --disk-format raw --container-format bare --name CirrOS --file images/cirros.raw --visibility public --store {{ DefaultLeaf0.name }} && glance image-import $(openstack image show CirrOS -c id -f value) --stores {% for dcn_leaf in DCNLeafs if (roles_count[dcn_leaf.name]["CephStorage"] + roles_count[dcn_leaf.name]["CephAll"] + roles_count[dcn_leaf.name]["ComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCI"] + roles_count[dcn_leaf.name]["DistributedComputeHCIScaleOut"]) > 0 %}{{ dcn_leaf.name }}{{ "," if not loop.last else "" }}{% endfor %} --import-method copy-image)
{% else %}
openstack image show '{{ rhel_image_name }}' &>/dev/null || openstack image create --disk-format qcow2 --min-disk 12 --min-ram 1536 --file images/{{ rhel_image_file }} --public '{{ rhel_image_name }}'
openstack image show CirrOS &>/dev/null || openstack image create --disk-format qcow2 --min-disk 2 --min-ram 512 --file images/cirros.qcow2 --public CirrOS
{% endif %}
RHEL_IMAGE_ID=$(openstack image show '{{ rhel_image_name }}' -f value -c id)
CIRROS_IMAGE_ID=$(openstack image show CirrOS -f value -c id)

################################################################################
### Create Overcloud Resources by HOT Template #################################
################################################################################

# If the stack does not exist, create it
openstack stack show overcloud_resources &>/dev/null || openstack stack create \
--template /home/stack/templates/overcloud_resources.yaml \
--parameter "image_rhel_external_id=${RHEL_IMAGE_ID}" \
--parameter "image_cirros_external_id=${CIRROS_IMAGE_ID}" \
overcloud_resources

# If the stack exists, update it
openstack stack show overcloud_resources &>/dev/null && openstack stack update \
--template /home/stack/templates/overcloud_resources.yaml \
--parameter "image_rhel_external_id=${RHEL_IMAGE_ID}" \
--parameter "image_cirros_external_id=${CIRROS_IMAGE_ID}" \
overcloud_resources

################################################################################
### TODO: MIGRATE TO overcloud_resources.yaml ##################################
################################################################################

# Networking
openstack network show test-network &>/dev/null || openstack network create test-network
openstack subnet show test-subnet &>/dev/null || openstack subnet create --network test-network --subnet-range 192.168.1.0/24 --gateway 192.168.1.1 --dhcp test-subnet
openstack port show test-subnet-gw &>/dev/null || openstack port create --network test-network --fixed-ip subnet=test-subnet,ip-address=192.168.1.1 test-subnet-gw
openstack router show test-router &>/dev/null || (openstack router create{% if DCNLeafs | length > 0 and RHOSP_version != 13.0 %} --availability-zone-hint overcloud{% endif %} test-router && openstack router set --external-gateway default-provider test-router && openstack router add port test-router test-subnet-gw)

{% for leaf in DCNLeafs %}
# DCN {{ leaf.name }} networking
openstack network show test-network-{{ leaf.name }} &>/dev/null || openstack network create test-network-{{ leaf.name }}
openstack subnet show test-subnet-{{ leaf.name }} &>/dev/null || openstack subnet create --network test-network-{{ leaf.name }} --subnet-range 192.168.1.0/24 --gateway 192.168.1.1 --dhcp test-subnet-{{ leaf.name }}
openstack port show test-subnet-{{ leaf.name }}-gw &>/dev/null || openstack port create --network test-network-{{ leaf.name }} --fixed-ip subnet=test-subnet-{{ leaf.name }},ip-address=192.168.1.1 test-subnet-{{ leaf.name }}-gw
openstack router show test-router-{{ leaf.name }} &>/dev/null || (openstack router create{{ ' --availability-zone-hint' ~ leaf.name if RHOSP_version != 13.0 else '' }} test-router-{{ leaf.name }} && openstack router set --external-gateway default-provider-{{ leaf.name }} test-router-{{ leaf.name }} && openstack router add port test-router-{{ leaf.name }} test-subnet-{{ leaf.name }}-gw)
{% endfor %}

# Add SSH and ICMP to default security group
SECGROUP=$(openstack security group list | grep default | grep $(openstack project show test-project -f value -c id) | awk '{print $2}')
openstack security group rule list $SECGROUP | grep 22:22 || openstack security group rule create $SECGROUP --protocol tcp --dst-port 22:22 --remote-ip 0.0.0.0/0
openstack security group rule list $SECGROUP | grep icmp || openstack security group rule create $SECGROUP --protocol icmp
