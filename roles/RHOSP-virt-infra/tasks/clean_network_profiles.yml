- name: NETWORKING - Delete bridges for networks linked with the hypervisor
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ item.bridge }}"
      interface_name: "{{ item.bridge }}"
      type: bridge
      state: absent
  when:
    - item.hypervisor == inventory_hostname
    - (item.forward == 'bridge')
  loop: "{{ networks }}"

- name: NETWORKING - Delete hypervisor interfaces
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ item.hypervisor_if }}"
      interface_name: "{{ item.hypervisor_if }}"
      type: ethernet
      state: absent
  when:
    - item.hypervisor == inventory_hostname
    - (item.forward == 'bridge') or (item.forward == 'open') and (item.hypervisor_if is defined)
  loop: "{{ networks }}"

- name: NETWORKING - Delete network configuration for vlans belonging to libvirt bridges in localhost
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ ( networks | selectattr('name', 'equalto', DefaultLeaf0.networks[item].network) | list | first ).bridge }}.{{ DefaultLeaf0.networks[item].vlan }}"
      type: vlan
      vlan_id: "{{ DefaultLeaf0.networks[item].vlan }}"
      parent: "{{ ( networks | selectattr('name', 'equalto', DefaultLeaf0.networks[item].network) | list | first ).bridge }}"
      state: absent
  when:
    - inventory_hostname == 'localhost'
    - DefaultLeaf0.networks[item].vlan is defined
  loop: "{{ DefaultLeaf0.networks.keys() | list }}"

- name: NETWORKING - Delete network configuration for vlans belonging to libvirt bridges in the leafs
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ ( networks | selectattr('name', 'equalto', item.0.networks[item.1].network) | list | first ).bridge }}.{{ item.0.networks[item.1].vlan }}"
      type: vlan
      vlan_id: "{{ item.0.networks[item.1].vlan }}"
      parent: "{{ ( networks | selectattr('name', 'equalto', item.0.networks[item.1].network) | list | first ).bridge }}"
      autoconnect: yes
      state: absent
  when:
    - item.0.hypervisor == inventory_hostname
    - item.0.networks[item.1].vlan is defined
  with_nested:
    - "{{ DCNLeafs }}"
    - "{{ DefaultLeaf0.networks.keys() | list }}"

- name: NETWORKING - Define only the network configuration for the public interface of the DCN hypervisors without static routes
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ hypervisor_external_if }}"
      interface_name: "{{ hypervisor_external_if }}"
      type: ethernet
      autoconnect: yes
      state: up
      ip:
        dhcp4: yes
  when: inventory_hostname != 'localhost'

- name: NETWORKING - Define only the network configuration for the public interface of the localhost hypervisor without static routes
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ external_if }}"
      interface_name: "{{ external_if }}"
      type: ethernet
      autoconnect: yes
      state: up
      ip:
        dhcp4: yes
  when: inventory_hostname == 'localhost'

- name: NETWORKING - Configure network using system role
  import_role:
    name: rhel-system-roles.network
  vars:
    network_allow_restart: yes

- name: NETWORKING - Gather facts again to get interfaces
  setup: