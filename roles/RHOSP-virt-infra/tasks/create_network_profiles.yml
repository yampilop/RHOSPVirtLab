- name: NETWORKING - Define bridges for networks linked with the hypervisor
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    ip:
      dhcp4: no
      auto6: no
      address:
        - "{% if item.ipv4 %}{{ (item.ipv4.address ~ '/' ~ item.ipv4.netmask) | ipaddr('host/prefix') }}{% endif %}"
    noip:
      dhcp4: no
      auto6: no
    connection:
      name: "{{ item.bridge }}"
      interface_name: "{{ item.bridge }}"
      type: bridge
      autoconnect: yes
      ip: "{% if item.ipv4 %}{{ ip }}{% else %}{{ noip }}{% endif %}"
      mtu: 1500
      state: up
  when:
    - item.hypervisor == inventory_hostname
    - (item.forward == 'bridge')
  loop: "{{ networks }}"

- name: NETWORKING - Define hypervisor interfaces
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ item.hypervisor_if }}"
      interface_name: "{{ item.hypervisor_if }}"
      type: ethernet
      autoconnect: yes
      ip:
        dhcp4: no
        auto6: no
      mtu: 1500
      state: up
  when:
    - item.hypervisor == inventory_hostname
    - (item.forward == 'bridge') and (item.hypervisor_if is defined)
  loop: "{{ networks }}"

- name: NETWORKING - Define network configuration for interfaces bridged to libvirt
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ item.hypervisor_if }}"
      interface_name: "{{ item.hypervisor_if }}"
      type: ethernet
      controller: "{{ item.bridge }}"
      port_type: bridge
      autoconnect: yes
      mtu: 1500
      state: up
  when:
    - item.hypervisor == inventory_hostname
    - (item.forward == 'bridge') and (item.hypervisor_if is defined)
  loop: "{{ networks }}"

- name: NETWORKING - Define network configuration for vlans belonging to libvirt bridges in localhost
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ ( networks | selectattr('name', 'equalto', DefaultLeaf0.networks[item].network) | list | first ).bridge }}.{{ DefaultLeaf0.networks[item].vlan }}"
      type: vlan
      vlan_id: "{{ DefaultLeaf0.networks[item].vlan }}"
      parent: "{{ ( networks | selectattr('name', 'equalto', DefaultLeaf0.networks[item].network) | list | first ).bridge }}"
      autoconnect: yes
      mtu: 1500
      state: up
      ip:
        dhcp4: no
        auto6: no
        address:
          - "{{ DefaultLeaf0.networks[item].prefix ~ '.1/24' }}"
  when:
    - inventory_hostname == 'localhost'
    - DefaultLeaf0.networks[item].vlan is defined
  loop: "{{ DefaultLeaf0.networks.keys() | list }}"

- name: NETWORKING - Define network configuration for vlans belonging to libvirt bridges in the leafs
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ ( networks | selectattr('name', 'equalto', item.0.networks[item.1].network) | list | first ).bridge }}.{{ item.0.networks[item.1].vlan }}"
      type: vlan
      vlan_id: "{{ item.0.networks[item.1].vlan }}"
      parent: "{{ ( networks | selectattr('name', 'equalto', item.0.networks[item.1].network) | list | first ).bridge }}"
      autoconnect: yes
      mtu: 1500
      state: up
      ip:
        dhcp4: no
        auto6: no
        address:
          - "{{ item.0.networks[item.1].prefix ~ '.1/24' }}"
  when:
    - item.0.hypervisor == inventory_hostname
    - item.0.networks[item.1].vlan is defined
  with_nested:
    - "{{ DCNLeafs }}"
    - "{{ DefaultLeaf0.networks.keys() | list }}"

- name: NETWORKING - Register DCN hypervisor routes
  set_fact:
    hypervisor_routes: |-
      [
        {
          "network": "{{ DefaultLeaf0.subnet.cidr.split('/')[0] }}",
          "prefix": "{{ DefaultLeaf0.subnet.cidr.split('/')[1] }}",
          "gateway": "{{ hostvars['localhost']['ansible_'~external_if].ipv4.address }}"
        },
      {% for network in (DefaultLeaf0.networks.keys() | list) %}
        {
          "network": "{{ DefaultLeaf0.networks[network].prefix ~ '.0' }}",
          "prefix": "24",
          "gateway": "{{ hostvars['localhost']['ansible_'~external_if].ipv4.address }}"
        },
      {% endfor %}
      {% for leaf in DCNLeafs if (leaf.hypervisor != inventory_hostname) %}
        {
          "network": "{{ leaf.subnet.cidr.split('/')[0] }}",
          "prefix": "{{ leaf.subnet.cidr.split('/')[1] }}",
          "gateway": "{{ hostvars[leaf.hypervisor]['ansible_'~(hostvars[leaf.hypervisor].hypervisor_external_if)].ipv4.address }}"
        },
      {% for network in (leaf.networks.keys() | list) %}
        {
          "network": "{{ leaf.networks[network].prefix ~ '.0' }}",
          "prefix": "24",
          "gateway": "{{ hostvars[leaf.hypervisor]['ansible_'~(hostvars[leaf.hypervisor].hypervisor_external_if)].ipv4.address }}"
        },
      {% endfor %}
      {% endfor %}
      ]

- name: NETWORKING - Define network configuration for the public interface of the DCN hypervisors and add static route
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ hypervisor_external_if }}"
      interface_name: "{{ hypervisor_external_if }}"
      type: ethernet
      autoconnect: yes
      mtu: 1500
      state: up
      ip:
        dhcp4: yes
        route: "{{ hypervisor_routes }}"
  when: inventory_hostname != 'localhost'

- name: Register localhost routes
  set_fact:
    localhost_routes: |-
      [
      {% for leaf in DCNLeafs %}
        {
          "network": "{{ leaf.subnet.cidr.split('/')[0] }}",
          "prefix": "{{ leaf.subnet.cidr.split('/')[1] }}",
          "gateway": "{{ hostvars[leaf.hypervisor]['ansible_'~(hostvars[leaf.hypervisor].hypervisor_external_if)].ipv4.address }}"
        },
      {% for network in (leaf.networks.keys() | list) %}
        {
          "network": "{{ leaf.networks[network].prefix ~ '.0' }}",
          "prefix": "24",
          "gateway": "{{ hostvars[leaf.hypervisor]['ansible_'~(hostvars[leaf.hypervisor].hypervisor_external_if)].ipv4.address }}"
        },
      {% endfor %}
      {% endfor %}
      ]

- name: NETWORKING - Define network configuration for the public interface of the localhost hypervisor and add static routes
  set_fact:
    network_connections: "{{ network_connections + [connection] }}"
  vars:
    connection:
      name: "{{ external_if }}"
      interface_name: "{{ external_if }}"
      type: ethernet
      autoconnect: yes
      mtu: 1500
      state: up
      ip:
        dhcp4: yes
        route: "{{ localhost_routes }}"
  when: inventory_hostname == 'localhost'

- name: NETWORKING - Configure network using system role
  import_role:
    name: rhel-system-roles.network
  vars:
    network_allow_restart: yes

- name: NETWORKING - Gather facts again to get interfaces
  setup: