- name: STORAGE - Create storage directory
  file:
    path: "{{ playbook_dir }}/storage"
    state: directory
    mode: '0777'

- name: STORAGE - Define the pool from the template
  community.libvirt.virt_pool:
    command: define
    name: "{{ item }}"
    xml: '{{ lookup("template", "templates/{{ item }}.xml") }}'
  when: ansible_libvirt_pools[item] is not defined
  loop:
    - RHOSPVirtLab_storage

- name: STORAGE - Gather facts about libvirt storage pools
  community.libvirt.virt_pool:
    command: facts

- name: STORAGE - Activate the pool
  community.libvirt.virt_pool:
    state: active
    name: "{{ item }}"
  when: ansible_libvirt_pools[item]['status'] != 'active'
  loop:
    - RHOSPVirtLab_storage

- name: STORAGE - Enable autostart for the pool
  community.libvirt.virt_pool:
    autostart: yes
    name: "{{ item }}"
  when: ansible_libvirt_pools[item]['autostart'] != 'yes'
  loop:
    - RHOSPVirtLab_storage

- name: STORAGE - Check if the disk file exists
  stat:
    path: "{{ playbook_dir }}/storage/{{ item }}_root.qcow2"
  register: disk_file
  loop: "{{ vms }}"

- name: Create disk file
  command: "virsh vol-create RHOSPVirtLab_storage {{ playbook_dir }}/templates/{{ item.item }}_root.xml"
  when: not item.stat.exists
  loop: "{{ disk_file.results }}"
